security:
    password_hashers:
        App\Entity\User:
            algorithm: auto


    role_hierarchy:
        ROLE_ADMIN: [ROLE_ADMIN]

    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
#    password_hashers:
#        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'crypt'

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        test:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            entry_point: form_login
            custom_authenticator: App\Security\AppAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                always_remember_me: true
            form_login:
                login_path: login
                check_path: login_check
                use_referer: true

#        main:
#            pattern: ^/
#            entry_point: form_login
##            anonymous:  ~
#            lazy: true
#            provider: app_user_provider
#
#
#            logout: ~

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/(.*)\.xml, roles: PUBLIC_ACCESS}
        - { path: ^/login, roles: PUBLIC_ACCESS}
        - { path: ^/feed/test, roles: PUBLIC_ACCESS}
#        - { path: ^/(feed)|(logs)|(item)|(dashboard)|(login_check), roles: ROLE_ADMIN }
