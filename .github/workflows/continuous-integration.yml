name: CI

on:
  pull_request:
    branches:
      - "master"
  push:
    branches:
      - "tac"

env:
  fail-fast: true

jobs:
  mysql:
    name: PHPUnit (PHP ${{ matrix.php }} with MySQL)
    runs-on: "ubuntu-20.04"
    services:
      mysql:
        image: mysql:9.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: f43_test
        ports:
          - 3306:3306
      rabbitmq:
        image: rabbitmq:3-alpine
        ports:
          - 5672:5672

    env:
      DATABASE_URL: mysql://root:@127.0.0.1:3306/f43_test?serverVersion=9.0.0&charset=utf8mb4

    strategy:
      matrix:
        php:
          - "8.2"
          - "8.3"
        include:
          - php: "8.3"
            coverage: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php }}"
          tools: pecl, composer:v2
          extensions: pdo, pdo_mysql, curl, amqp
          ini-values: "date.timezone=Europe/Paris"
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies with Composer
        uses: ramsey/composer-install@v3

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "yarn"

      - name: Setup messenger queue
        run: php bin/console messenger:setup-transports --env=dev

      - name: Prepare database
        run: make prepare

      - name: Prepare logs
        run: mkdir -p build/logs

      - name: Run PHPUnit
        run: php bin/simple-phpunit -v

  postgresql:
    name: PHPUnit (PHP ${{ matrix.php }} with PostgreSQL)
    runs-on: "ubuntu-22.04"
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_PASSWORD: root
        ports:
          - 5432:5432
      rabbitmq:
        image: rabbitmq:3-alpine
        ports:
          - 5672:5672

    env:
      DATABASE_URL: postgresql://postgres:root@localhost:5432/f43me?serverVersion=14&charset=utf8

    strategy:
      matrix:
        php:
          - "8.2"
          - "8.3"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php }}"
          tools: pecl, composer:v2
          extensions: pdo, pdo_pgsql, curl, amqp
          ini-values: "date.timezone=Europe/Paris"
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies with Composer
        uses: ramsey/composer-install@v3

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "yarn"

      - name: Install dependencies with Yarn
        run: yarn install && yarn dev

      - name: Setup messenger queue
        run: php bin/console messenger:setup-transports --env=dev

      - name: Prepare database
        run: make prepare

      - name: Prepare logs
        run: mkdir -p build/logs

      - name: Run PHPUnit
        run: php bin/simple-phpunit -v
