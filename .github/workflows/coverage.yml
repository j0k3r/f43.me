name: Coverage

on:
  pull_request:
    branches:
      - "master"
  push:
    branches:
      - "master"

jobs:
  phpunit:
    name: PHPUnit
    runs-on: "ubuntu-20.04"
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: f43_test
        ports:
          - 3306:3306
      rabbitmq:
        image: rabbitmq:3-alpine
        ports:
          - 5672:5672

    strategy:
      matrix:
        php:
          - "7.4"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install PHP with PCOV
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php }}"
          coverage: "pcov"
          tools: pecl, composer:v2
          extensions: pdo, pdo_mysql, curl, amqp
          ini-values: "date.timezone=Europe/Paris"
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies with Composer
        uses: ramsey/composer-install@v3

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "yarn"

      - name: Install dependencies with Yarn
        run: yarn install && yarn dev

      - name: Setup messenger queue
        run: php bin/console messenger:setup-transports --env=dev

      - name: Prepare database
        run: make prepare

      - name: Prepare logs
        run: mkdir -p build/logs

      - name: Run PHPUnit with coverage
        run: php bin/simple-phpunit -v --coverage-clover=coverage.xml

      - name: Retrieve Coveralls phar
        run: wget https://github.com/php-coveralls/php-coveralls/releases/download/v2.5.2/php-coveralls.phar

      - name: Enable Coveralls phar
        run: chmod +x php-coveralls.phar

      - name: Upload to Coveralls
        run: php php-coveralls.phar -v -x coverage.xml -o coveralls-upload.json
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
